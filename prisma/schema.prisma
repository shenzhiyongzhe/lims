generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @db.VarChar(10)
  id_card      String?  @db.VarChar(10)
  password     String   @db.VarChar(32)
  phone        String   @db.VarChar(11) @unique
  address      String   @db.VarChar(100)
  lv           String   @default("青铜用户") @db.VarChar(16)
  overdue_time Int      @default(0)
  is_high_risk Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  loanAccounts LoanAccount[]

  @@map("user")
}

// 复用的枚举（还款状态）
enum ManagementRoles {
  管理员
  财务员
  风控人
  负责人
  收款人
}
model Admin {
  id           Int      @id @default(autoincrement())
  username     String   @db.VarChar(10)
  password     String   @db.VarChar(32)
  phone        String   @db.VarChar(11) @unique
  role         ManagementRoles   
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  @@map("admins")
}
// 建议添加到 prisma/schema.prisma 中相应位置

// 复用的枚举（还款状态）
enum LoanStatus {
  pending
  active
  paid
  overdue
}
enum RepaymentStatus {
  pending
  active
  paid
  overtime
  overdue
}
model LoanAccount {
  loan_id           Int       @id @default(autoincrement()) @db.Int
  user_id           Int      
  username          String    @db.VarChar(10)
  loan_amount       Decimal   @db.Decimal(10, 2) 
  receiving_amount  Decimal?  @db.Decimal(10, 2)
  payment_amount    Decimal?  @db.Decimal(10, 2)
  capital           Decimal   @db.Decimal(10, 2) 
  interest          Decimal   @db.Decimal(10, 2) 
  due_start_date    DateTime
  due_end_date      DateTime
  status            LoanStatus  @default(pending)
  handling_fee      Decimal   @db.Decimal(10, 2)
  total_periods     Int
  monthly_repayment Decimal   @db.Decimal(10, 2)
  collector         String    @db.VarChar(10)
  payee             String    @db.VarChar(10)
  risk_controller   String    @db.VarChar(10)
  company_cost      Int       @default(0)
  remark            String?   @db.VarChar(255)
  created_at        DateTime
  updated_at        DateTime? 

  // 关系
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  RepaymentSchedules RepaymentSchedule[]

  @@map("loan_accounts")
}

model RepaymentSchedule {
  schedule_id    Int              @id @default(autoincrement())
  loan_id        Int
  period         Int
  due_start_date DateTime
  due_end_date   DateTime
  due_amount     Decimal          @db.Decimal(10, 2)
  capital        Decimal?         @db.Decimal(10, 2)
  interest       Decimal?         @db.Decimal(10, 2)
  status         RepaymentStatus  @default(pending)
  paid_amount    Decimal?         @db.Decimal(10, 2)
  paid_at        DateTime?

  // 外键关系到 LoanAccount
  loan_account LoanAccount @relation(fields: [loan_id], references: [loan_id], onDelete: Cascade, onUpdate: Cascade)

  @@map("repayment_schedules")
}

enum PaymentMethod{
  wechat_pay
  ali_pay
}
model RepaymentRecord {
  record_id       Int @id @default(autoincrement())
  loan_id         Int 
  user_id         Int
  paid_amount     Decimal? @db.Decimal(10, 2)
  paid_at         String? @db.VarChar(19)
  payment_method  PaymentMethod @default(wechat_pay) 
  remark          String? @db.VarChar(255)

  @@map("repayment_records")
}


model Payee {
  payee_id     Int      @id @default(autoincrement())
  username     String   @db.VarChar(10)
  phone        String   @db.VarChar(11) @unique
  qrcode_url   String   
  qrcode_type  PaymentMethod @default(wechat_pay)    
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  @@map("payees")
}