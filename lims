server {
    listen 80;
    server_name 117.72.155.71;
    # 全站HTTP跳转HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2                on;
    ssl_certificate      /etc/nginx/cert/certificate.crt;
    ssl_certificate_key  /etc/nginx/cert/private.key;

    server_name 117.72.155.71;

    # 静态前端（Next export 输出目录）
    root /var/www/out;
    index index.html index.htm;
    location / {
        # 处理可能误打到前端路径的预检请求，避免 405
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers $http_access_control_request_headers always;
            add_header Access-Control-Max-Age 86400 always;
            return 204;
        }
        # 支持无后缀 html 路由
        try_files $uri $uri.html $uri/ /index.html;
    }

    # Next 静态资源（可长缓存）
    location /_next/static/ {
        # 如果使用 export，该目录已生成到 /var/www/out/_next/static
        # 直接走静态文件并长缓存
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 公共上传静态资源
    location /uploads/ {
        alias /var/www/lims-nest-server/public/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin *;
    }

    # 后端 API 反向代理（仅匹配接口前缀）
    location ~ ^/(admins|auth|statistics|events|orders|users|loan-accounts|repayment-schedules|payees|payee)(/|$) {
        # 允许跨域预检在此快速返回
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers $http_access_control_request_headers always;
            add_header Access-Control-Max-Age 86400 always;
            return 204;
        }
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE/长连接（/events）
        proxy_read_timeout 1h;
        proxy_buffering off;
        add_header X-Accel-Buffering no;
        gzip off;

        client_max_body_size 50m;
    }
}
